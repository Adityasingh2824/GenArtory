{"version":3,"sources":["../src/index.ts","../src/constants.ts","../src/network.ts","../src/types/pairing.ts","../src/types/signingRequest.ts"],"sourcesContent":["// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from './constants';\nexport * from './network';\nexport * from './responseBodies';\nexport * from './types';\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport const DEFAULT_BACKEND_URL = 'https://identityconnect.com';\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nexport enum NetworkName {\n  DEVNET = 'devnet',\n  MAINNET = 'mainnet',\n  TESTNET = 'testnet',\n}\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { AccountData } from './account';\nimport { RegisteredDappDataBase } from './dapp';\nimport { ConnectedWalletData } from './wallet';\nimport { DappSpecificWallet } from './dappSpecificWallet';\n\nexport enum PairingStatus {\n  Finalized = 'FINALIZED',\n  Pending = 'PENDING',\n}\n\nexport interface BasePairingData {\n  createdAt: Date;\n  dappEd25519PublicKeyB64: string;\n  dappSpecificWallet?: DappSpecificWallet;\n  dappSpecificWalletId?: string;\n  expiresAt: Date;\n  id: string;\n  maxDappSequenceNumber: number;\n  maxWalletSequenceNumber: number;\n  registeredDapp: RegisteredDappDataBase;\n  registeredDappId: string;\n  status: PairingStatus;\n  updatedAt: Date;\n}\n\nexport interface NewPairingData extends BasePairingData {\n  maxDappSequenceNumber: -1;\n  maxWalletSequenceNumber: -1;\n  status: PairingStatus.Pending;\n}\n\nexport interface BaseFinalizedPairingData extends BasePairingData {\n  account: AccountData;\n  accountId: string;\n  status: PairingStatus.Finalized;\n  walletName: string;\n}\n\nexport interface AnonymousPairingData extends BaseFinalizedPairingData {\n  anonymousWallet: ConnectedWalletData;\n  anonymousWalletId: string;\n}\n\nexport type FinalizedPairingData = BaseFinalizedPairingData | AnonymousPairingData;\nexport type PairingData = NewPairingData | FinalizedPairingData;\n","// Copyright © Aptos\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RegisteredDappDataBase } from './dapp';\n\n// region Duplicated from crypto to prevent dependency cycle\n\nexport type SerializedEncryptionResult = {\n  nonceB64: string;\n  securedB64: string;\n};\n\nexport type SecuredEnvelopeTransport = {\n  encryptedPrivateMessage: SerializedEncryptionResult;\n  messageSignature: string;\n  serializedPublicMessage: string;\n};\n\n// endregion\n\nexport enum SigningRequestTypes {\n  SIGN_AND_SUBMIT_TRANSACTION = 'SIGN_AND_SUBMIT_TRANSACTION',\n  SIGN_MESSAGE = 'SIGN_MESSAGE',\n  SIGN_TRANSACTION = 'SIGN_TRANSACTION',\n}\n\nexport enum SigningRequestStatus {\n  APPROVED = 'APPROVED',\n  CANCELLED = 'CANCELLED',\n  INVALID = 'INVALID',\n  PENDING = 'PENDING',\n  REJECTED = 'REJECTED',\n}\n\nexport interface SigningRequestData {\n  apiVersion: string;\n  createdAt: Date;\n  id: string;\n  networkName: string | null;\n  pairing: {\n    registeredDapp: RegisteredDappDataBase;\n  };\n  pairingId: string;\n  requestEnvelope: SecuredEnvelopeTransport;\n  requestType: SigningRequestTypes;\n  responseEnvelope?: SecuredEnvelopeTransport;\n  status: SigningRequestStatus;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACGO,IAAM,sBAAsB;;;ACA5B,IAAK,cAAL,kBAAKA,iBAAL;AACL,EAAAA,aAAA,YAAS;AACT,EAAAA,aAAA,aAAU;AACV,EAAAA,aAAA,aAAU;AAHA,SAAAA;AAAA,GAAA;;;ACKL,IAAK,gBAAL,kBAAKC,mBAAL;AACL,EAAAA,eAAA,eAAY;AACZ,EAAAA,eAAA,aAAU;AAFA,SAAAA;AAAA,GAAA;;;ACYL,IAAK,sBAAL,kBAAKC,yBAAL;AACL,EAAAA,qBAAA,iCAA8B;AAC9B,EAAAA,qBAAA,kBAAe;AACf,EAAAA,qBAAA,sBAAmB;AAHT,SAAAA;AAAA,GAAA;AAML,IAAK,uBAAL,kBAAKC,0BAAL;AACL,EAAAA,sBAAA,cAAW;AACX,EAAAA,sBAAA,eAAY;AACZ,EAAAA,sBAAA,aAAU;AACV,EAAAA,sBAAA,aAAU;AACV,EAAAA,sBAAA,cAAW;AALD,SAAAA;AAAA,GAAA;","names":["NetworkName","PairingStatus","SigningRequestTypes","SigningRequestStatus"]}