"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeIrys = void 0;
const tslib_1 = require("tslib");
const base_1 = require("./base");
const tokens_1 = tslib_1.__importDefault(require("./tokens"));
class NodeIrys extends base_1.BaseNodeIrys {
    /**
     * Constructs a new Irys instance, as well as supporting subclasses
     * @param url - URL to the bundler
     * @param key - private key (in whatever form required)
     */
    constructor({ url, token, network, key, config }) {
        super({
            url,
            config,
            network,
            getTokenConfig: (irys) => {
                return (0, tokens_1.default)(irys, token.toLowerCase(), key, irys.api.getConfig().url.toString(), config === null || config === void 0 ? void 0 : config.providerUrl, config === null || config === void 0 ? void 0 : config.contractAddress, config === null || config === void 0 ? void 0 : config.tokenOpts);
            },
        });
    }
    static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const { url, token, privateKey, publicKey, signingFunction, collectSignatures, providerUrl, timeout, contractAddress } = opts;
            const Irys = new NodeIrys({
                url,
                token,
                key: signingFunction ? publicKey : privateKey,
                config: {
                    providerUrl,
                    timeout,
                    contractAddress,
                    tokenOpts: { signingFunction, collectSignatures },
                },
            });
            yield Irys.ready();
            return Irys;
        });
    }
}
exports.NodeIrys = NodeIrys;
exports.default = NodeIrys;
//# sourceMappingURL=irys.js.map