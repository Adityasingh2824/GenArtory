"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadApprovalMetaTags = exports.UploadApprovalTags = exports.Approval = void 0;
const tslib_1 = require("tslib");
const utils_1 = tslib_1.__importDefault(require("./utils"));
class Approval {
    constructor(irys) {
        this.irys = irys;
    }
    getApprovals({ payingAddresses, tokens = [this.irys.token], approvedAddresses = [this.irys.address], }) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return yield this.queryApproval.payingAddresses(payingAddresses).tokens(tokens).approvedAddresses(approvedAddresses);
        });
    }
    getCreatedApprovals({ payingAddresses = [this.irys.address], tokens = [this.irys.token], approvedAddresses, }) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return this.getApprovals({ payingAddresses, tokens, approvedAddresses });
        });
    }
    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
    get queryApproval() {
        return this.irys.query().search("irys:paymentApprovals");
    }
    getApproval({ payingAddress = this.irys.address, token = this.irys.token, approvedAddress, }) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const res = yield this.irys.api.get("/account/approval", { params: { payingAddress, token, approvedAddress } });
            if (res.status === 404)
                return { amount: "0" };
            utils_1.default.checkAndThrow(res);
            return res.data;
        });
    }
    getApprovedBalanceFrom(payingAddress) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            if (!payingAddress)
                throw new Error("Paying address is required");
            return yield this.getApproval({ payingAddress, approvedAddress: this.irys.address, token: this.irys.token });
        });
    }
    createApproval({ approvedAddress, amount, expiresInSeconds, }) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const tags = [
                { name: UploadApprovalTags.APPROVE_PAYMENT, value: approvedAddress },
                { name: UploadApprovalMetaTags.AMOUNT, value: amount.toString() },
            ];
            if (expiresInSeconds)
                tags.push({ name: UploadApprovalMetaTags.EXPIRE_SECONDS, value: expiresInSeconds.toString() });
            return yield this.irys.upload("", { tags });
        });
    }
    revokeApproval({ approvedAddress }) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const tags = [{ name: UploadApprovalTags.DELETE_APPROVAL, value: approvedAddress }];
            return yield this.irys.upload("", { tags });
        });
    }
}
exports.Approval = Approval;
var UploadApprovalTags;
(function (UploadApprovalTags) {
    UploadApprovalTags["APPROVE_PAYMENT"] = "x-irys-approve-payment";
    UploadApprovalTags["DELETE_APPROVAL"] = "x-irys-delete-payment-approval";
})(UploadApprovalTags || (exports.UploadApprovalTags = UploadApprovalTags = {}));
var UploadApprovalMetaTags;
(function (UploadApprovalMetaTags) {
    UploadApprovalMetaTags["AMOUNT"] = "x-amount";
    UploadApprovalMetaTags["EXPIRE_SECONDS"] = "x-expire-seconds";
})(UploadApprovalMetaTags || (exports.UploadApprovalMetaTags = UploadApprovalMetaTags = {}));
//# sourceMappingURL=approval.js.map