import type { IrysConfig, Network } from "../common/types.js";
import { BaseNodeIrys } from "./base.js";
export declare class NodeIrys extends BaseNodeIrys {
    /**
     * Constructs a new Irys instance, as well as supporting subclasses
     * @param url - URL to the bundler
     * @param key - private key (in whatever form required)
     */
    constructor({ url, token, network, key, config }: {
        url?: string;
        network?: Network;
        token: string;
        key?: any;
        config?: IrysConfig;
    });
    static init(opts: {
        url: string;
        token: string;
        privateKey?: string;
        publicKey?: string;
        signingFunction?: (msg: Uint8Array) => Promise<Uint8Array>;
        collectSignatures?: (msg: Uint8Array) => Promise<{
            signatures: string[];
            bitmap: number[];
        }>;
        providerUrl?: string;
        timeout?: number;
        contractAddress?: string;
    }): Promise<NodeIrys>;
}
export default NodeIrys;
