/// <reference types="react" />
import { AccountInfo, NetworkInfo, WalletInfo, SignMessagePayload, SignMessageResponse, Wallet, InputGenerateTransactionOptions, AnyRawTransaction, InputTransactionData, InputSubmitTransactionData, PendingTransactionResponse, AccountAuthenticator, Types, WalletName, AptosChangeNetworkOutput, Network, AptosStandardSupportedWallet } from "@aptos-labs/wallet-adapter-core";
export interface WalletContextState {
    connected: boolean;
    isLoading: boolean;
    account: AccountInfo | null;
    network: NetworkInfo | null;
    connect(walletName: WalletName): void;
    disconnect(): void;
    wallet: WalletInfo | null;
    wallets?: ReadonlyArray<Wallet | AptosStandardSupportedWallet>;
    signAndSubmitTransaction(transaction: InputTransactionData): Promise<any>;
    signTransaction(transactionOrPayload: AnyRawTransaction | Types.TransactionPayload, asFeePayer?: boolean, options?: InputGenerateTransactionOptions): Promise<AccountAuthenticator>;
    submitTransaction(transaction: InputSubmitTransactionData): Promise<PendingTransactionResponse>;
    signMessage(message: SignMessagePayload): Promise<SignMessageResponse>;
    signMessageAndVerify(message: SignMessagePayload): Promise<boolean>;
    changeNetwork(network: Network): Promise<AptosChangeNetworkOutput>;
}
export declare const WalletContext: import("react").Context<WalletContextState>;
export declare function useWallet(): WalletContextState;
//# sourceMappingURL=useWallet.d.ts.map