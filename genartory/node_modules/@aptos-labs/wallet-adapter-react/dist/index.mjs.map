{"version":3,"sources":["../src/index.tsx","../src/WalletProvider.tsx","../src/useWallet.tsx","../src/components/AptosPrivacyPolicy.tsx","../src/graphics/SmallAptosLogo.tsx","../src/components/WalletItem.tsx"],"sourcesContent":["export * from \"@aptos-labs/wallet-adapter-core\";\nexport * from \"./WalletProvider\";\nexport * from \"./components/AptosPrivacyPolicy\";\nexport * from \"./components/WalletItem\";\nexport * from \"./useWallet\";\n","import {\n  FC,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { WalletContext } from \"./useWallet\";\nimport type {\n  AccountInfo,\n  NetworkInfo,\n  SignMessagePayload,\n  Wallet,\n  WalletInfo,\n  InputGenerateTransactionOptions,\n  AnyRawTransaction,\n  InputSubmitTransactionData,\n  AccountAuthenticator,\n  PendingTransactionResponse,\n  SignMessageResponse,\n  WalletName,\n  Types,\n  InputTransactionData,\n  Network,\n  AptosStandardSupportedWallet,\n  AvailableWallets,\n} from \"@aptos-labs/wallet-adapter-core\";\nimport { DappConfig, WalletCore } from \"@aptos-labs/wallet-adapter-core\";\n\nexport interface AptosWalletProviderProps {\n  children: ReactNode;\n  plugins?: ReadonlyArray<Wallet>;\n  optInWallets?: ReadonlyArray<AvailableWallets>;\n  autoConnect?: boolean;\n  dappConfig?: DappConfig;\n  onError?: (error: any) => void;\n}\n\nconst initialState: {\n  account: AccountInfo | null;\n  network: NetworkInfo | null;\n  connected: boolean;\n  wallet: WalletInfo | null;\n} = {\n  connected: false,\n  account: null,\n  network: null,\n  wallet: null,\n};\n\n/**\n * Supported props to pass into the provider\n *\n * @param plugins Non AIP-62 supported wallet plugins array\n * @param optInWallets AIP-62 supported wallet names array to only include in the adapter wallets\n * @param autoConnect A boolean flag to indicate if the adapter should auto connect to a wallet\n * @param dappConfig The dapp configurations to be used by SDK wallets to set their configurations\n * @param onError A callback function to execute when there is an error in the adapter\n *\n */\nexport const AptosWalletAdapterProvider: FC<AptosWalletProviderProps> = ({\n  children,\n  plugins,\n  optInWallets,\n  autoConnect = false,\n  dappConfig,\n  onError,\n}: AptosWalletProviderProps) => {\n  const [{ connected, account, network, wallet }, setState] =\n    useState(initialState);\n\n  // a local state to track whether wallet connect request is loading\n  // https://github.com/aptos-labs/aptos-wallet-adapter/issues/94\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const walletCore = useMemo(\n    () => new WalletCore(plugins ?? [], optInWallets ?? [], dappConfig),\n    []\n  );\n  const [wallets, setWallets] = useState<\n    ReadonlyArray<Wallet | AptosStandardSupportedWallet>\n  >(walletCore.wallets);\n\n  const connect = async (walletName: WalletName) => {\n    try {\n      setIsLoading(true);\n      await walletCore.connect(walletName);\n    } catch (error: any) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const disconnect = async () => {\n    try {\n      await walletCore.disconnect();\n    } catch (error) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    }\n  };\n\n  const signTransaction = async (\n    transaction: AnyRawTransaction | Types.TransactionPayload,\n    asFeePayer?: boolean,\n    options?: InputGenerateTransactionOptions\n  ): Promise<AccountAuthenticator> => {\n    try {\n      return await walletCore.signTransaction(transaction, asFeePayer, options);\n    } catch (error: any) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    }\n  };\n\n  const signMessage = async (\n    message: SignMessagePayload\n  ): Promise<SignMessageResponse> => {\n    try {\n      return await walletCore.signMessage(message);\n    } catch (error: any) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    }\n  };\n\n  const signMessageAndVerify = async (\n    message: SignMessagePayload\n  ): Promise<boolean> => {\n    try {\n      return await walletCore.signMessageAndVerify(message);\n    } catch (error: any) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    }\n  };\n\n  const submitTransaction = async (\n    transaction: InputSubmitTransactionData\n  ): Promise<PendingTransactionResponse> => {\n    try {\n      return await walletCore.submitTransaction(transaction);\n    } catch (error: any) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    }\n  };\n\n  const signAndSubmitTransaction = async (\n    transaction: InputTransactionData\n  ) => {\n    try {\n      return await walletCore.signAndSubmitTransaction(transaction);\n    } catch (error: any) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    }\n  };\n\n  const changeNetwork = async (network: Network) => {\n    try {\n      return await walletCore.changeNetwork(network);\n    } catch (error: any) {\n      if (onError) onError(error);\n      return Promise.reject(error);\n    }\n  };\n\n  useEffect(() => {\n    if (autoConnect) {\n      if (localStorage.getItem(\"AptosWalletName\") && !connected) {\n        connect(localStorage.getItem(\"AptosWalletName\") as WalletName);\n      } else {\n        // if we dont use autoconnect set the connect is loading to false\n        setIsLoading(false);\n      }\n    }\n  }, [autoConnect, wallets]);\n\n  useEffect(() => {\n    if (connected) {\n      walletCore.onAccountChange();\n      walletCore.onNetworkChange();\n    }\n  }, [connected]);\n\n  // Handle the adapter's connect event\n  const handleConnect = () => {\n    setState((state) => {\n      return {\n        ...state,\n        connected: true,\n        account: walletCore.account,\n        network: walletCore.network,\n        wallet: walletCore.wallet,\n      };\n    });\n  };\n\n  // Handle the adapter's disconnect event\n  const handleDisconnect = () => {\n    if (!connected) return;\n    setState((state) => {\n      return {\n        ...state,\n        connected: false,\n        account: walletCore.account,\n        network: walletCore.network,\n        wallet: null,\n      };\n    });\n  };\n\n  // Handle the adapter's account change event\n  const handleAccountChange = useCallback(() => {\n    if (!connected) return;\n    if (!walletCore.wallet) return;\n    setState((state) => {\n      return {\n        ...state,\n        account: walletCore.account,\n      };\n    });\n  }, [connected]);\n\n  // Handle the adapter's network event\n  const handleNetworkChange = useCallback(() => {\n    if (!connected) return;\n    if (!walletCore.wallet) return;\n    setState((state) => {\n      return {\n        ...state,\n        network: walletCore.network,\n      };\n    });\n  }, [connected]);\n\n  const handleReadyStateChange = (updatedWallet: Wallet) => {\n    // Create a new array with updated values\n    const updatedWallets = (wallets as Wallet[])?.map((wallet) => {\n      if (wallet.name === updatedWallet.name) {\n        // Return a new object with updated value\n        return { ...wallet, readyState: updatedWallet.readyState };\n      }\n      return wallet;\n    });\n    setWallets(updatedWallets);\n  };\n\n  const handleStandardWalletsAdded = (\n    standardWallet: Wallet | AptosStandardSupportedWallet\n  ) => {\n    // Manage current wallet state by removing optional duplications\n    // as new wallets are coming\n    const existingWalletIndex = wallets.findIndex(\n      (wallet) => wallet.name == standardWallet.name\n    );\n    if (existingWalletIndex !== -1) {\n      // If wallet exists, replace it with the new wallet\n      setWallets((wallets) => [\n        ...wallets.slice(0, existingWalletIndex),\n        standardWallet,\n        ...wallets.slice(existingWalletIndex + 1),\n      ]);\n    } else {\n      // If wallet doesn't exist, add it to the array\n      setWallets((wallets) => [...wallets, standardWallet]);\n    }\n  };\n\n  useEffect(() => {\n    walletCore.on(\"connect\", handleConnect);\n    walletCore.on(\"disconnect\", handleDisconnect);\n    walletCore.on(\"accountChange\", handleAccountChange);\n    walletCore.on(\"networkChange\", handleNetworkChange);\n    walletCore.on(\"readyStateChange\", handleReadyStateChange);\n    walletCore.on(\"standardWalletsAdded\", handleStandardWalletsAdded);\n    return () => {\n      walletCore.off(\"connect\", handleConnect);\n      walletCore.off(\"disconnect\", handleDisconnect);\n      walletCore.off(\"accountChange\", handleAccountChange);\n      walletCore.off(\"networkChange\", handleNetworkChange);\n      walletCore.off(\"readyStateChange\", handleReadyStateChange);\n      walletCore.off(\"standardWalletsAdded\", handleStandardWalletsAdded);\n    };\n  }, [wallets, connected]);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        connect,\n        account,\n        network,\n        connected,\n        disconnect,\n        wallet,\n        wallets,\n        signAndSubmitTransaction,\n        signTransaction,\n        signMessage,\n        signMessageAndVerify,\n        isLoading,\n        submitTransaction,\n        changeNetwork,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n};\n","import {\n  AccountInfo,\n  NetworkInfo,\n  WalletInfo,\n  SignMessagePayload,\n  SignMessageResponse,\n  Wallet,\n  InputGenerateTransactionOptions,\n  AnyRawTransaction,\n  InputTransactionData,\n  InputSubmitTransactionData,\n  PendingTransactionResponse,\n  AccountAuthenticator,\n  Types,\n  WalletName,\n  AptosChangeNetworkOutput,\n  Network,\n  AptosStandardSupportedWallet,\n} from \"@aptos-labs/wallet-adapter-core\";\nimport { createContext, useContext } from \"react\";\n\nexport interface WalletContextState {\n  connected: boolean;\n  isLoading: boolean;\n  account: AccountInfo | null;\n  network: NetworkInfo | null;\n  connect(walletName: WalletName): void;\n  disconnect(): void;\n  wallet: WalletInfo | null;\n  wallets?: ReadonlyArray<Wallet | AptosStandardSupportedWallet>;\n  signAndSubmitTransaction(transaction: InputTransactionData): Promise<any>;\n  signTransaction(\n    transactionOrPayload: AnyRawTransaction | Types.TransactionPayload,\n    asFeePayer?: boolean,\n    options?: InputGenerateTransactionOptions\n  ): Promise<AccountAuthenticator>;\n  submitTransaction(\n    transaction: InputSubmitTransactionData\n  ): Promise<PendingTransactionResponse>;\n  signMessage(message: SignMessagePayload): Promise<SignMessageResponse>;\n  signMessageAndVerify(message: SignMessagePayload): Promise<boolean>;\n  changeNetwork(network: Network): Promise<AptosChangeNetworkOutput>;\n}\n\nconst DEFAULT_CONTEXT = {\n  connected: false,\n};\n\nexport const WalletContext = createContext<WalletContextState>(\n  DEFAULT_CONTEXT as WalletContextState\n);\n\nexport function useWallet(): WalletContextState {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error(\"useWallet must be used within a WalletContextState\");\n  }\n  return context;\n}\n","import { Slot } from \"@radix-ui/react-slot\";\nimport { ReactNode, forwardRef } from \"react\";\nimport { SmallAptosLogo } from \"../graphics/SmallAptosLogo\";\n\nexport const APTOS_PRIVACY_POLICY_URL = \"https://aptoslabs.com/privacy\";\n\nexport interface AptosPrivacyPolicyProps {\n  /** A class name for styling the element. */\n  className?: string;\n  /**\n   * Whether to render as the child element instead of the default element provided.\n   * All props will be merged into the child element.\n   */\n  asChild?: boolean;\n  children?: ReactNode;\n}\n\nconst Root = forwardRef<HTMLDivElement, AptosPrivacyPolicyProps>(\n  ({ className, asChild, children }, ref) => {\n    const Component = asChild ? Slot : \"div\";\n\n    return (\n      <Component ref={ref} className={className}>\n        {children}\n      </Component>\n    );\n  }\n);\nRoot.displayName = \"AptosPrivacyPolicy.Root\";\n\nconst Disclaimer = forwardRef<HTMLSpanElement, AptosPrivacyPolicyProps>(\n  ({ className, asChild, children }, ref) => {\n    const Component = asChild ? Slot : \"span\";\n\n    return (\n      <Component ref={ref} className={className}>\n        {children ?? \"By continuing, you agree to Aptos Labs'\"}\n      </Component>\n    );\n  }\n);\nDisclaimer.displayName = \"AptosPrivacyPolicy.Disclaimer\";\n\nconst Link = forwardRef<HTMLAnchorElement, AptosPrivacyPolicyProps>(\n  ({ className, asChild, children }, ref) => {\n    const Component = asChild ? Slot : \"a\";\n\n    return (\n      <Component\n        ref={ref}\n        className={className}\n        href={APTOS_PRIVACY_POLICY_URL}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {children ?? \"Privacy Policy\"}\n      </Component>\n    );\n  }\n);\nLink.displayName = \"AptosPrivacyPolicy.Link\";\n\nconst PoweredBy = forwardRef<\n  HTMLDivElement,\n  Pick<AptosPrivacyPolicyProps, \"className\">\n>(({ className }, ref) => {\n  return (\n    <div ref={ref} className={className}>\n      <span>Powered by</span>\n      <SmallAptosLogo />\n      <span>Aptos Labs</span>\n    </div>\n  );\n});\nPoweredBy.displayName = \"AptosPrivacyPolicy.PoweredBy\";\n\n/**\n * A headless component for rendering the Aptos Labs privacy policy disclaimer\n * that should be placed under the Aptos Connect login options.\n */\nexport const AptosPrivacyPolicy = Object.assign(Root, {\n  Disclaimer,\n  Link,\n  PoweredBy,\n});\n","import { SVGProps } from \"react\";\n\nexport function SmallAptosLogo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6 12C9.31371 12 12 9.31371 12 6C12 2.68629 9.31371 0 6 0C2.68629 0 0 2.68629 0 6C0 9.31371 2.68629 12 6 12ZM7.17547 3.67976C7.13401 3.72309 7.07649 3.74757 7.01648 3.74757H3.00775C3.69185 2.83824 4.77995 2.25 6.00569 2.25C7.23142 2.25 8.31953 2.83824 9.00362 3.74757H8.28524C8.20824 3.74757 8.13498 3.71468 8.08401 3.65701L7.81608 3.35416C7.77618 3.30896 7.71882 3.28308 7.6585 3.28308H7.6454C7.58805 3.28308 7.53318 3.30646 7.49343 3.34792L7.17547 3.67976ZM8.05656 4.75897H7.39569C7.31869 4.75897 7.24543 4.72593 7.19447 4.66842L6.92638 4.36557C6.88647 4.32036 6.82896 4.29465 6.7688 4.29465C6.70863 4.29465 6.65112 4.32052 6.61121 4.36557L6.38131 4.6254C6.30603 4.71034 6.19801 4.75913 6.08454 4.75913H2.46703C2.36401 5.05278 2.29683 5.36296 2.27002 5.68467H5.68505C5.74506 5.68467 5.80258 5.66019 5.84404 5.61686L6.16201 5.28502C6.20175 5.24356 6.25662 5.22018 6.31398 5.22018H6.32707C6.38739 5.22018 6.44475 5.24606 6.48465 5.29126L6.75258 5.59411C6.80355 5.65178 6.87681 5.68467 6.95381 5.68467H9.74133C9.71452 5.3628 9.64734 5.05263 9.54431 4.75913H8.05641L8.05656 4.75897ZM4.33651 7.63095C4.39652 7.63095 4.45404 7.60648 4.4955 7.56315L4.81347 7.23131C4.85321 7.18985 4.90808 7.16647 4.96544 7.16647H4.97853C5.03885 7.16647 5.09621 7.19234 5.13611 7.23739L5.40404 7.54024C5.45501 7.59791 5.52827 7.6308 5.60527 7.6308H9.38285C9.52438 7.33839 9.62803 7.02463 9.68975 6.69591H6.06383C5.98683 6.69591 5.91357 6.66287 5.8626 6.60535L5.59467 6.3025C5.55477 6.2573 5.49725 6.23158 5.43709 6.23158C5.37692 6.23158 5.31941 6.25746 5.27951 6.3025L5.0496 6.56233C4.97432 6.64728 4.86631 6.69606 4.75268 6.69606H2.32147C2.3832 7.02479 2.487 7.33855 2.62837 7.63095H4.33651ZM5.57359 8.55745H4.59116C4.51417 8.55745 4.44091 8.52441 4.38994 8.46689L4.12201 8.16404C4.0821 8.11884 4.02459 8.09312 3.96442 8.09312C3.90426 8.09312 3.84675 8.119 3.80684 8.16404L3.57694 8.42387C3.50166 8.50882 3.39364 8.55761 3.28001 8.55761H3.26474C3.94915 9.29096 4.92378 9.74998 6.00596 9.74998C7.08815 9.74998 8.06262 9.29096 8.74719 8.55761H5.57359V8.55745Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n","import {\n  AnyAptosWallet,\n  WalletReadyState,\n  isRedirectable,\n} from \"@aptos-labs/wallet-adapter-core\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  ReactNode,\n  createContext,\n  forwardRef,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { useWallet } from \"../useWallet\";\n\nexport interface WalletItemProps {\n  /** The wallet option to be displayed. */\n  wallet: AnyAptosWallet;\n  /** A callback to be invoked when the wallet is connected. */\n  onConnect?: () => void;\n  /** A class name for styling the wrapper element. */\n  className?: string;\n  /**\n   * Whether to render as the child element instead of the default `div` provided.\n   * All props will be merged into the child element.\n   */\n  asChild?: boolean;\n  children?: ReactNode;\n}\n\nexport interface WalletItemElementProps {\n  /** A class name for styling the element. */\n  className?: string;\n  /**\n   * Whether to render as the child element instead of the default element provided.\n   * All props will be merged into the child element.\n   */\n  asChild?: boolean;\n  children?: ReactNode;\n}\n\nconst WalletItemContext = createContext<{\n  wallet: AnyAptosWallet;\n  connectWallet: () => void;\n} | null>(null);\n\nconst WalletItemRoot = forwardRef<HTMLDivElement, WalletItemProps>(\n  ({ wallet, onConnect, className, asChild, children }, ref) => {\n    const { connect } = useWallet();\n\n    const connectWallet = useCallback(() => {\n      connect(wallet.name);\n      onConnect?.();\n    }, [connect, wallet.name, onConnect]);\n\n    const isWalletReady =\n      wallet.readyState === WalletReadyState.Installed ||\n      wallet.readyState === WalletReadyState.Loadable;\n\n    const mobileSupport =\n      \"deeplinkProvider\" in wallet && wallet.deeplinkProvider;\n\n    if (!isWalletReady && isRedirectable() && !mobileSupport) return null;\n\n    const Component = asChild ? Slot : \"div\";\n\n    return (\n      <WalletItemContext.Provider value={{ wallet, connectWallet }}>\n        <Component ref={ref} className={className}>\n          {children}\n        </Component>\n      </WalletItemContext.Provider>\n    );\n  }\n);\nWalletItemRoot.displayName = \"WalletItem\";\n\nconst WalletItemIcon = forwardRef<HTMLImageElement, WalletItemElementProps>(\n  ({ className, asChild, children }, ref) => {\n    const context = useContext(WalletItemContext);\n\n    if (!context) {\n      throw new Error(\"`WalletItem.Icon` must be used within `WalletItem`\");\n    }\n\n    const Component = asChild ? Slot : \"img\";\n\n    return (\n      <Component\n        ref={ref}\n        src={context.wallet.icon}\n        alt={`${context.wallet.name} icon`}\n        className={className}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\nWalletItemIcon.displayName = \"WalletItem.Icon\";\n\nconst WalletItemName = forwardRef<HTMLDivElement, WalletItemElementProps>(\n  ({ className, asChild, children }, ref) => {\n    const context = useContext(WalletItemContext);\n\n    if (!context) {\n      throw new Error(\"`WalletItem.Name` must be used within `WalletItem`\");\n    }\n\n    const Component = asChild ? Slot : \"div\";\n\n    return (\n      <Component ref={ref} className={className}>\n        {children ?? context.wallet.name}\n      </Component>\n    );\n  }\n);\nWalletItemName.displayName = \"WalletItem.Name\";\n\nconst WalletItemConnectButton = forwardRef<\n  HTMLButtonElement,\n  WalletItemElementProps\n>(({ className, asChild, children }, ref) => {\n  const context = useContext(WalletItemContext);\n\n  if (!context) {\n    throw new Error(\n      \"`WalletItem.ConnectButton` must be used within `WalletItem`\"\n    );\n  }\n\n  const Component = asChild ? Slot : \"button\";\n\n  return (\n    <Component ref={ref} className={className} onClick={context.connectWallet}>\n      {children ?? \"Connect\"}\n    </Component>\n  );\n});\nWalletItemConnectButton.displayName = \"WalletItem.ConnectButton\";\n\nconst WalletItemInstallLink = forwardRef<\n  HTMLAnchorElement,\n  WalletItemElementProps\n>(({ className, asChild, children }, ref) => {\n  const context = useContext(WalletItemContext);\n\n  if (!context) {\n    throw new Error(\n      \"`WalletItem.InstallLink` must be used within `WalletItem`\"\n    );\n  }\n\n  const Component = asChild ? Slot : \"a\";\n\n  return (\n    <Component\n      ref={ref}\n      className={className}\n      href={context.wallet.url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {children ?? \"Install\"}\n    </Component>\n  );\n});\nWalletItemInstallLink.displayName = \"WalletItem.InstallLink\";\n\n/** A headless component for rendering a wallet option's name, icon, and either connect button or install link. */\nexport const WalletItem = Object.assign(WalletItemRoot, {\n  Icon: WalletItemIcon,\n  Name: WalletItemName,\n  ConnectButton: WalletItemConnectButton,\n  InstallLink: WalletItemInstallLink,\n});\n"],"mappings":"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","names":["network","wallet","wallets","jsx","jsx","Slot","createContext","forwardRef","useCallback","useContext","jsx","createContext","forwardRef","useCallback","Slot","useContext"]}