import { AptosConfig, EntryFunctionArgumentTypes, SimpleEntryFunctionArgumentTypes } from "@aptos-labs/ts-sdk";
import { NetworkInfo as StandardNetworkInfo } from "@aptos-labs/wallet-standard";
import { NetworkInfo } from "../LegacyWalletPlugins/types";
import { AnyAptosWallet } from "../WalletCore";
export declare function isMobile(): boolean;
export declare function isInAppBrowser(): boolean;
export declare function isRedirectable(): boolean;
export declare function generalizedErrorMessage(error: any): string;
export declare const areBCSArguments: (args: Array<EntryFunctionArgumentTypes | SimpleEntryFunctionArgumentTypes>) => boolean;
/**
 * Helper function to get AptosConfig that supports Aptos and Custom networks
 *
 * @param networkInfo
 * @returns AptosConfig
 */
export declare const getAptosConfig: (networkInfo: NetworkInfo | StandardNetworkInfo | null) => AptosConfig;
/**
 * Helper function to resolve if the current connected network is an Aptos network
 *
 * @param networkInfo
 * @returns boolean
 */
export declare const isAptosNetwork: (networkInfo: NetworkInfo | StandardNetworkInfo | null) => boolean;
/**
 * Helper function to fetch Devnet chain id
 */
export declare const fetchDevnetChainId: () => Promise<number>;
/**
 * A function that will partition the provided wallets into two list â€” `defaultWallets` and `moreWallets`.
 * By default, the wallets will be partitioned by whether or not they are installed or loadable.
 * You can pass your own partition function if you wish to customize this behavior.
 */
export declare function partitionWallets(wallets: ReadonlyArray<AnyAptosWallet>, partitionFunction?: (wallet: AnyAptosWallet) => boolean): {
    defaultWallets: AnyAptosWallet[];
    moreWallets: AnyAptosWallet[];
};
/** Returns true if the wallet is installed or loadable. */
export declare function isInstalledOrLoadable(wallet: AnyAptosWallet): boolean;
/**
 * Returns true if the user is on desktop and the provided wallet requires installation of a browser extension.
 * This can be used to decide whether to show a "Connect" button or "Install" link in the UI.
 */
export declare function isInstallRequired(wallet: AnyAptosWallet): boolean;
/** Truncates the provided wallet address at the middle with an ellipsis. */
export declare function truncateAddress(address: string | undefined): string | undefined;
//# sourceMappingURL=helpers.d.ts.map